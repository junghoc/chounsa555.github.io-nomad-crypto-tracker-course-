{"version":3,"sources":["atoms.tsx","CreateToDo.tsx","ToDo.tsx","CreateCategory.tsx","ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["toDoState","atom","key","default","effects_UNSTABLE","_ref","setSelf","onSet","savedData","sessionStorage","getItem","JSON","parse","newValue","setItem","stringify","categoriesState","_ref2","categoryState","_ref3","toDoSelector","selector","get","_ref4","toDos","category","filter","toDo","CreateToDo","useRecoilValue","setToDos","useSetRecoilState","register","handleSubmit","setValue","useForm","_jsxs","onSubmit","alert","oldToDos","text","id","Date","now","children","_jsx","required","placeholder","ToDo","categories","onClick","event","currentTarget","name","targetIndex","findIndex","newToDo","slice","map","cate","onClickDelete","CreateCategory","setCategories","useRecoilState","setCategory","length","oldCategories","includes","ToDoList","_Fragment","onInput","value","aTodo","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","React","StrictMode","RecoilRoot","ThemeProvider","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.675ab7c2.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport interface ITodo {\n  text: string;\n  id: number;\n  category: string;\n}\n\nexport const toDoState = atom<ITodo[]>({\n  key: \"toDo\",\n  default: [],\n  effects_UNSTABLE: [\n    ({ setSelf, onSet }) => {\n      const savedData = sessionStorage.getItem(\"toDo\");\n      // setSelf: atom 값을 설정 혹은 재설정\n      if (savedData) setSelf(JSON.parse(savedData));\n\n      // atom이 변화가 감지될 때 작동, Storage에 데이터 저장\n      // setSelf에 의해서는 작동하지 않음\n      onSet((newValue) => {\n        sessionStorage.setItem(\"toDo\", JSON.stringify(newValue));\n      });\n    },\n  ],\n});\n\nexport const categoriesState = atom<string[]>({\n  key: \"categories\",\n  default: [],\n  effects_UNSTABLE: [\n    ({ setSelf, onSet }) => {\n      const savedData = sessionStorage.getItem(\"categories\");\n      // setSelf: atom 값을 설정 혹은 재설정\n      if (savedData) setSelf(JSON.parse(savedData));\n\n      // atom이 변화가 감지될 때 작동, Storage에 데이터 저장\n      // setSelf에 의해서는 작동하지 않음\n      onSet((newValue) => {\n        sessionStorage.setItem(\"categories\", JSON.stringify(newValue));\n      });\n    },\n  ],\n});\n\nexport const categoryState = atom<string>({\n  key: \"category\",\n  default: \"\",\n  effects_UNSTABLE: [\n    ({ setSelf, onSet }) => {\n      const savedData = sessionStorage.getItem(\"category\");\n      // setSelf: atom 값을 설정 혹은 재설정\n      if (savedData) setSelf(JSON.parse(savedData));\n\n      // atom이 변화가 감지될 때 작동, Storage에 데이터 저장\n      // setSelf에 의해서는 작동하지 않음\n      onSet((newValue) => {\n        sessionStorage.setItem(\"category\", JSON.stringify(newValue));\n      });\n    },\n  ],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"./atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const category = useRecoilValue(categoryState);\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const onSubmit = ({ toDo }: IForm) => {\n    if (category === \"\") {\n      alert(\"카테고리를 등록해 주세요.\");\n    }\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category: category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import { categoriesState, ITodo, toDoState } from \"./atoms\";\nimport React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nfunction ToDo({ text, category, id }: ITodo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const categories = useRecoilValue(categoriesState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = {\n        text,\n        id,\n        category: name as any,\n      };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  const onClickDelete = () => {\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {categories.map(\n        (cate) =>\n          category !== cate && (\n            <button key={cate} name={cate} onClick={onClick}>\n              {cate}\n            </button>\n          ),\n      )}\n\n      <button onClick={onClickDelete}>Delete</button>\n    </li>\n  );\n}\n\nexport default ToDo;\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { categoriesState, categoryState } from \"./atoms\";\n\ninterface IForm {\n  category: string;\n}\n\nfunction CreateCategory() {\n  const [categories, setCategories] = useRecoilState(categoriesState);\n  const setCategory = useSetRecoilState(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const onSubmit = ({ category }: IForm) => {\n    if (categories.length === 0) setCategory(category);\n    setCategories((oldCategories) => {\n      //if (oldCategories.length === 0) setCategory(category);\n      if (oldCategories.includes(category)) {\n        // Same category in list\n        return oldCategories;\n      } else {\n        // No Same category in list\n        return [...oldCategories, category];\n      }\n    });\n\n    setValue(\"category\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        {...register(\"category\", {\n          required: \"Please write a Category\",\n        })}\n      />\n    </form>\n  );\n}\n\nexport default CreateCategory;\n","import CreateToDo from \"./CreateToDo\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoriesState, categoryState, toDoSelector } from \"./atoms\";\nimport React from \"react\";\nimport ToDo from \"./ToDo\";\nimport CreateCategory from \"./CreateCategory\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const categories = useRecoilValue(categoriesState);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value);\n  };\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <hr />\n      <h2>CreateCategory</h2>\n      <CreateCategory />\n      {categories.length > 0 && (\n        <>\n          <hr />\n          <h2>Categories</h2>\n          <select onInput={onInput} value={category}>\n            {categories?.map((category) => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n\n          <hr />\n          <h2>CreateToDo</h2>\n          <CreateToDo />\n\n          {toDos && (\n            <>\n              <hr />\n              <h2>ToDos</h2>\n              {toDos?.map((aTodo) => <ToDo key={aTodo.id} {...aTodo} />)}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n    @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, menu, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed,\n    figure, figcaption, footer, header, hgroup,\n    main, menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure,\n    footer, header, hgroup, main, menu, nav, section {\n        display: block;\n    }\n\n    /* HTML5 hidden-attribute fix for newer browsers */\n    *[hidden] {\n        display: none;\n    }\n\n    body {\n        line-height: 1;\n    }\n\n    menu, ol, ul {\n        list-style: none;\n    }\n\n    blockquote, q {\n        quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n\n    * {\n        box-sizing: border-box;\n    }\n\n    body {\n        font-weight: 300;\n        font-family: 'Source Sans Pro', sans-serif;\n        background-color: ${(props) => props.theme.bgColor};\n        color: ${(props) => props.theme.textColor};\n        line-height: 1.2;\n    }\n\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}